buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'war'
}

group = 'com.superboard'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

	// https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-objectstorage
	implementation group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-objectstorage', version: '3.3.0'
	

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.6'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Get BOM file and choose Oracle JDBC driver (ojdbc8.jar) and Universal Connection Pool (ucp.jar)
    implementation(enforcedPlatform("com.oracle.database.jdbc:ojdbc-bom:19.7.0.0"))
    // https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc8
    implementation group: 'com.oracle.database.jdbc', name: 'ojdbc10', version: '19.7.0.0'

    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    implementation("com.oracle.database.jdbc:ucp")
    // Additional Jars for using Oracle Wallets 
    implementation("com.oracle.database.security:oraclepki")
    implementation("com.oracle.database.security:osdt_core")
    implementation("com.oracle.database.security:osdt_cert")
    // Additional Jars for High Availability 
    //implementation("com.oracle.database.ha:ons")
    //implementation("com.oracle.database.ha:simplefan")


    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    runtimeOnly 'com.h2database:h2'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    //implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    /* Swagger 설정 */
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation "io.springfox:springfox-swagger-ui:3.0.0"
    implementation group: 'io.springfox', name: 'springfox-oas', version: '3.0.0'

    /* Spring boot mail 설정*/
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    implementation("com.google.guava:guava:31.1-jre")
    
   	implementation 'com.oracle.oci.sdk:oci-java-sdk-full:latest.release'
   	
	// https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-common-httpclient-jersey
	implementation group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-common-httpclient-jersey', version: '3.3.0'
	
	// https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-audit
	implementation group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-audit', version: '3.3.0'
	
	// https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-core
	implementation group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-core', version: '3.3.0'
	
	// https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-database
	implementation group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-database', version: '3.3.0'
	
	
	//log4j 설정
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
}

bootWar {
    archiveName("onboard.war")
}

test {
    exclude '**/*'
}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 
def querydslSrcDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    //querydslDefault = true
    querydslSourcesDir = querydslSrcDir
}
sourceSets {
    main.java.srcDir querydslSrcDir
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    querydsl.extendsFrom compileClasspath
}
