buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.superboard'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.6'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Get BOM file and choose Oracle JDBC driver (ojdbc8.jar) and Universal Connection Pool (ucp.jar)
    implementation(enforcedPlatform("com.oracle.database.jdbc:ojdbc-bom:19.7.0.0"))
    // https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc8
    implementation group: 'com.oracle.database.jdbc', name: 'ojdbc10', version: '19.7.0.0'

    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    implementation("com.oracle.database.jdbc:ucp")
    // Additional Jars for using Oracle Wallets 
    implementation("com.oracle.database.security:oraclepki")
    implementation("com.oracle.database.security:osdt_core")
    implementation("com.oracle.database.security:osdt_cert")
    // Additional Jars for High Availability 
    implementation("com.oracle.database.ha:ons")
    implementation("com.oracle.database.ha:simplefan")

	
	  testImplementation 'org.springframework.boot:spring-boot-starter-test'

	  runtimeOnly 'com.h2database:h2'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    /* Swagger 설정 */
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation "io.springfox:springfox-swagger-ui:3.0.0"

    /* Spring boot mail 설정*/
    implementation 'org.springframework.boot:spring-boot-starter-mail'
}



test {
    exclude '**/*'
}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 
def querydslSrcDir = 'src/main/querydsl'
querydsl {
    jpa = true
    querydslDefault = true
    querydslSourcesDir = querydslSrcDir
}
sourceSets {
    main.java.srcDir querydslSrcDir
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    querydsl.extendsFrom compileClasspath
}
