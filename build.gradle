buildscript{
	ext {
		queryDslVersion = "5.0.0"
	}	
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	//querydsl 추가
 	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.superboard'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'
	
	/* Swagger 설정 */
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
}


test {
	exclude '**/*'
}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 
def querydslSrcDir = 'src/main/querydsl'
querydsl {
    jpa = true
    querydslDefault = true
    querydslSourcesDir = querydslSrcDir
}
sourceSets {
   main.java.srcDir querydslSrcDir 
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    querydsl.extendsFrom compileClasspath
}
